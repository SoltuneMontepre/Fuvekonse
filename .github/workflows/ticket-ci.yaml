name: Fuvekon Back CI

on:
  pull_request:
    branches:
      - "**"
    paths:
      - "services/ticket-service/**"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        service: [ticket-service]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: 1.25

      - name: Cache Go modules and build cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.service }}-${{ hashFiles('**/go.sum') }}

      - name: Install swag CLI
        run: go install github.com/swaggo/swag/cmd/swag@latest

      - name: Generate Swagger docs
        working-directory: services/${{ matrix.service }}
        run: |
          swag init -g cmd/main.go -o ./docs
          echo "âœ… Swagger docs generated for ${{ matrix.service }}"

      - name: Download dependencies
        working-directory: services/${{ matrix.service }}
        run: go mod download

      - name: Verify dependencies
        working-directory: services/${{ matrix.service }}
        run: go mod verify

      - name: Build service
        working-directory: services/${{ matrix.service }}
        run: |
          go build -o ./tmp/main ./cmd/main.go
          echo "âœ… ${{ matrix.service }} built successfully"

      - name: Build migrate tool
        working-directory: services/${{ matrix.service }}
        run: |
          go build -o ./tmp/migrate ./cmd/migrate/main.go
          echo "âœ… ${{ matrix.service }} migrate tool built successfully"

      # - name: Run tests
      #   working-directory: services/${{ matrix.service }}
      #   run: |
      #     go test -v ./...

      - name: Notify failure
        if: failure()
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: "ðŸš¨ CI build for **${{ github.repository }}** failed on commit `${{ github.sha }}` by ${{ github.actor }} (service: ${{ matrix.service }})"

      - name: Notify success
        if: success()
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: "ðŸŽ‰ CI build for **${{ github.repository }}** succeeded on commit `${{ github.sha }}` by ${{ github.actor }} (service: ${{ matrix.service }})"
