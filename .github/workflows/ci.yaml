name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        service: [general-service, ticket-service]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.25'
        
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
          
    - name: Install swag CLI
      run: go install github.com/swaggo/swag/cmd/swag@latest
      
    - name: Generate Swagger documentation
      working-directory: services/${{ matrix.service }}
      run: |
        swag init -g cmd/main.go -o ./docs
        echo "✅ Swagger docs generated for ${{ matrix.service }}"
        
    - name: Download dependencies
      working-directory: services/${{ matrix.service }}
      run: go mod download
      
    - name: Verify dependencies
      working-directory: services/${{ matrix.service }}
      run: go mod verify
      
    - name: Build service
      working-directory: services/${{ matrix.service }}
      run: |
        go build -o ./tmp/main ./cmd/main.go
        echo "✅ ${{ matrix.service }} built successfully"
        
    - name: Build migrate tool
      working-directory: services/${{ matrix.service }}
      run: |
        go build -o ./tmp/migrate ./cmd/migrate/main.go
        echo "✅ ${{ matrix.service }} migrate tool built successfully"
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.service }}-build
        path: services/${{ matrix.service }}/tmp/
        retention-days: 7

  docker-build:
    runs-on: ubuntu-latest
    needs: build
    
    strategy:
      matrix:
        service: [general-service, ticket-service]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Docker image
      working-directory: services/${{ matrix.service }}
      run: |
        docker build -t ${{ matrix.service }}:latest .
        echo "✅ Docker image built for ${{ matrix.service }}"
